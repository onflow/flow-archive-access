name: CI

# Continuous integration will run whenever a pull request for the master branch
# is created or updated.
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # This check makes sure that the `go.mod` and `go.sum` files for Go
      # modules are always up-to-date.
      - name: Verify Go modules
        run: go mod tidy && git status && git --no-pager diff && git diff-index --quiet HEAD --

      # This check makes sure that the source code is formatted according to the
      # Go standard `go fmt` formatting.
      - name: Verify source code formatting
        run: go fmt ./... && git status && git --no-pager diff && git diff-index --quiet HEAD --

      # This check makes sure that we can compile the binary as a pure Go binary
      # without CGO support.
      - name: Verify compilation
        run: go build -tags relic ./...

      # This check runs all unit tests with verbose output and ensures that all
      # of the tests pass successfully.
      - name: Verify unit tests
        run: go test -tags relic -v ./...

      # This check runs all integration tests with verbose output and ensures
      # that they pass successfully.
      - name: Verify integration tests
        run: go test -v -tags="relic integration" ./...

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          args: -v --build-tags relic --timeout=3m
          working-directory: .
          skip-pkg-cache: true

  docker-verify:
    name: verify docker build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Docker build
        run: make docker-build-flow-archive-access
